// /app/api/report/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { getDashboardConnection } from '@/lib/connection'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SQL Server
import sql from 'mssql';

export async function POST(req: NextRequest) {
  try {
    // üëá ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å body ‡∏Ç‡∏≠‡∏á request (‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ POST body ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà searchParams)
    const body = await req.json();
    const { name, department, description } = body;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (!name || !department || !description) {
      return NextResponse.json(
        { error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' },
        { status: 400 }
      );
    }

    // üëá ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SQL Server
    const pool = await getDashboardConnection();

    // üëá ‡πÉ‡∏ä‡πâ parameterized query ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏à‡∏≤‡∏Å SQL Injection
    await pool
      .request()
      .input('Name', sql.NVarChar(100), name)
      .input('Department', sql.NVarChar(100), department)
      .input('Description', sql.NVarChar(sql.MAX), description)
      .query(`
        INSERT INTO ReportIssues (Name, Department, Description)
        VALUES (@Name, @Department, @Description)
      `);

    return NextResponse.json({ message: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }, { status: 200 });
  } catch (error) {
    console.error('Error reporting issue:', error);
    return NextResponse.json(
      { error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤' },
      { status: 500 }
    );
  }
}
